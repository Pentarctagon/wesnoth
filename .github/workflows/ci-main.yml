name: CI

# TODO: cmake --build instead of calling xcode directly?
# would this be able to run configured post_build commands and such?

# TODO: some way to integrate the post-configuration steps into cmake?
# ie: copying resources over after build completes

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  macos-intel-release:
    runs-on: macos-11.0

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Cache object files
        id: macos-cache
        uses: actions/cache@v2
        with:
          path: |
            /Users/runner/vcpkg
            /Users/runner/work/wesnoth/wesnoth/vcpkg_installed
            /Users/runner/build-cache
          key: M005

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.20'

      - name: Build vcpkg
        run: |
          ./.github/workflows/ci-scripts/get_vcpkg.sh

      - name: Install dependencies
        run: |
          ./.github/workflows/ci-scripts/macos_install_deps.sh

      - name: Build code
        run: |
          ./.github/workflows/ci-scripts/macos_compile.sh

      - name: WML unit tests
        run: |
          ./run_wml_tests -g -c -t 60 -p /Users/runner/work/wesnoth/wesnoth/Release/wesnoth.app/Contents/MacOS/wesnoth

      - name: Create dmg
        run: |
          ./.github/workflows/ci-scripts/macos_dmg.sh

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: dmg
          path: |
            /Users/runner/work/wesnoth/wesnoth/Wesnoth_Release.dmg
